{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/clients.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/alerts.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nexport class ClientRegisterUpdateComponent {\n  constructor(clientsService, route, alertsService) {\n    this.clientsService = clientsService;\n    this.route = route;\n    this.alertsService = alertsService;\n    this.registerForm = new FormGroup({\n      cpf: new FormControl(0, Validators.required),\n      nome: new FormControl('', Validators.required),\n      telefone: new FormControl(0, Validators.required),\n      logradouro: new FormControl('', Validators.required),\n      renda: new FormControl(0, Validators.required)\n    });\n    this.clientCpf = 0;\n  }\n  // Resolver o problema do tipo do CPF (string ou number)\n  ngOnInit() {\n    this.clientCpf = Number(this.route.snapshot.paramMap.get('cpf'));\n    if (this.clientCpf) {\n      this.clientsService.findClientByCpf(this.clientCpf).subscribe(client => {\n        this.registerForm.setValue({\n          cpf: client.cpf,\n          nome: client.nome,\n          telefone: client.telefone || 0,\n          logradouro: client.logradouro || \"\",\n          renda: client.renda || 0\n        });\n      });\n    }\n  }\n  cadastrar() {\n    const client = this.registerForm.value;\n    this.clientsService.registerClient(client).subscribe(result => {\n      this.alertsService.alertSuccess('Cliente cadastrado com sucesso!');\n    }, error => {\n      console.error();\n    });\n  }\n}\nClientRegisterUpdateComponent.ɵfac = function ClientRegisterUpdateComponent_Factory(t) {\n  return new (t || ClientRegisterUpdateComponent)(i0.ɵɵdirectiveInject(i1.ClientsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AlertsService));\n};\nClientRegisterUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientRegisterUpdateComponent,\n  selectors: [[\"app-client-register-update\"]],\n  decls: 41,\n  vars: 6,\n  consts: [[1, \"display-6\"], [1, \"container-fluid\"], [\"action\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-3\"], [1, \"mb-3\"], [\"for\", \"cpf\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cpf\", \"formControlName\", \"cpf\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"logradouro\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"logradouro\", \"formControlName\", \"logradouro\", 1, \"form-control\"], [\"for\", \"renda\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"renda\", \"formControlName\", \"renda\", 1, \"form-control\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"Complemento\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"Complemento\", 1, \"form-control\"], [\"for\", \"telefone\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"telefone\", \"formControlName\", \"telefone\", 1, \"form-control\"], [\"for\", \"cep\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cep\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function ClientRegisterUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ClientRegisterUpdateComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.cadastrar();\n      });\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Logradouro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Renda Mensal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"div\", 5)(23, \"label\", 12);\n      i0.ɵɵtext(24, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 5)(27, \"label\", 14);\n      i0.ɵɵtext(28, \"Complemento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 4)(31, \"div\", 5)(32, \"label\", 16);\n      i0.ɵɵtext(33, \"Telefone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 5)(36, \"label\", 18);\n      i0.ɵɵtext(37, \"CEP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 19);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"button\", 20);\n      i0.ɵɵtext(40, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.clientCpf ? \"Atualizar Cadastro\" : \"Cadastrar\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, ctx.registerForm.value));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","ClientRegisterUpdateComponent","constructor","clientsService","route","alertsService","cpf","required","nome","telefone","logradouro","renda","ngOnInit","clientCpf","Number","snapshot","paramMap","get","findClientByCpf","subscribe","client","registerForm","setValue","cadastrar","value","registerClient","result","alertSuccess","error","console","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\emprestimo-front\\emprestimo-front\\src\\app\\pages\\client-register-update\\client-register-update.component.ts","C:\\emprestimo-front\\emprestimo-front\\src\\app\\pages\\client-register-update\\client-register-update.component.html"],"sourcesContent":["import { HttpHeaderResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IClient } from 'src/app/interfaces/client';\r\nimport { AlertsService } from 'src/app/services/alerts.service';\r\nimport { ClientsService } from 'src/app/services/clients.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-client-register-update',\r\n  templateUrl: './client-register-update.component.html',\r\n  styleUrls: ['./client-register-update.component.css'],\r\n})\r\nexport class ClientRegisterUpdateComponent {\r\n\r\n  registerForm = new FormGroup({\r\n    cpf: new FormControl(0, Validators.required),\r\n    nome: new FormControl('',Validators.required),\r\n    telefone: new FormControl(0,Validators.required),\r\n    logradouro: new FormControl('',Validators.required),\r\n    renda: new FormControl(0, Validators.required),\r\n  });\r\n\r\n  constructor(private clientsService: ClientsService, private route: ActivatedRoute, private alertsService: AlertsService) {}\r\n  clientCpf = 0;\r\n\r\n  // Resolver o problema do tipo do CPF (string ou number)\r\n  ngOnInit() {\r\n    this.clientCpf = Number(this.route.snapshot.paramMap.get('cpf'));\r\n    if(this.clientCpf) {\r\n      this.clientsService.findClientByCpf(this.clientCpf).subscribe((client: IClient) => {\r\n        this.registerForm.setValue({\r\n          cpf: client.cpf,\r\n          nome: client.nome,\r\n          telefone: client.telefone || 0,\r\n          logradouro: client.logradouro || \"\",\r\n          renda: client.renda || 0\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  cadastrar() {\r\n    const client: IClient = this.registerForm.value as IClient;\r\n    this.clientsService.registerClient(client).subscribe(result => {\r\n      this.alertsService.alertSuccess('Cliente cadastrado com sucesso!');\r\n    }, error => {\r\n      console.error();\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Componentizar o formulário. -->\r\n\r\n<h1 class=\"display-6\">{{ clientCpf ? 'Atualizar Cadastro' : 'Cadastrar'}}</h1>\r\n<div>{{registerForm.value | json}}</div>\r\n<div class=\"container-fluid\">\r\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"cadastrar()\" action=\"\">\r\n    <div class=\"row\">\r\n      <div class=\"col-3\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"cpf\" class=\"form-label\">CPF</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"cpf\" formControlName=\"cpf\" required/>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"logradouro\" class=\"form-label\">Logradouro</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"logradouro\" formControlName=\"logradouro\"/>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"renda\" class=\"form-label\">Renda Mensal</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"renda\" formControlName=\"renda\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"nome\" class=\"form-label\">Nome</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\"/>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"Complemento\" class=\"form-label\">Complemento</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"Complemento\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"telefone\" class=\"form-label\">Telefone</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"telefone\" formControlName=\"telefone\"/>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"cep\" class=\"form-label\">CEP</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"cep\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}