{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/clients.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/alerts.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nexport class ClientRegisterUpdateComponent {\n  constructor(clientsService, route, alertsService) {\n    this.clientsService = clientsService;\n    this.route = route;\n    this.alertsService = alertsService;\n    this.registerForm = new FormGroup({\n      cpf: new FormControl('', Validators.required),\n      nome: new FormControl('', Validators.required),\n      telefone: new FormControl(0, Validators.required),\n      logradouro: new FormControl('', Validators.required),\n      complemento: new FormControl('', Validators.required),\n      cep: new FormControl('', Validators.required),\n      rendimentoMensal: new FormControl(0, Validators.required)\n    });\n    this.clientCpf = '';\n  }\n  ngOnInit() {\n    this.clientCpf = String(this.route.snapshot.paramMap.get('cpf'));\n    if (this.clientCpf && this.clientCpf !== '') {\n      this.clientsService.findClientByCpf(this.clientCpf).subscribe(client => {\n        this.registerForm.setValue({\n          cpf: client.cpf,\n          nome: client.nome,\n          telefone: client.telefone,\n          logradouro: client.logradouro,\n          complemento: client.complemento,\n          cep: client.cep,\n          rendimentoMensal: client.rendimentoMensal\n        });\n      });\n    }\n  }\n  onSubmit() {\n    if (this.clientCpf) {\n      this.atualizar();\n    } else {\n      this.cadastrar();\n    }\n  }\n  cadastrar() {\n    const client = this.registerForm.value;\n    this.clientsService.registerClient(client).subscribe(result => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Cadastro realizado!'\n      }).then(retornar => {\n        window.open(\"http://localhost:4200/clientes\", \"_self\");\n      });\n    }, error => {\n      console.error();\n    });\n  }\n  atualizar() {\n    const client = this.registerForm.value;\n    this.clientsService.updateClient(client, this.clientCpf).subscribe(result => {\n      Swal.fire({\n        title: 'Cliente atualizado com sucesso',\n        icon: 'success',\n        confirmButtonText: 'Ok'\n      }).then(retornar => {\n        window.open(\"http://localhost:4200/clientes\", \"_self\");\n      });\n    }, error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Algo deu errado! Verifique o erro no console.'\n      });\n      console.error(error);\n    });\n  }\n}\nClientRegisterUpdateComponent.ɵfac = function ClientRegisterUpdateComponent_Factory(t) {\n  return new (t || ClientRegisterUpdateComponent)(i0.ɵɵdirectiveInject(i1.ClientsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AlertsService));\n};\nClientRegisterUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientRegisterUpdateComponent,\n  selectors: [[\"app-client-register-update\"]],\n  decls: 42,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"display-6\"], [1, \"panel\", \"bg-whit\", \"shadow\", \"p-4\", \"m-4\"], [1, \"panel-body\"], [\"action\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [\"for\", \"cpf\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cpf\", \"formControlName\", \"cpf\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"logradouro\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"logradouro\", \"formControlName\", \"logradouro\", 1, \"form-control\"], [\"for\", \"renda\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"renda\", \"formControlName\", \"rendimentoMensal\", 1, \"form-control\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"Complemento\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"Complemento\", \"formControlName\", \"complemento\", 1, \"form-control\"], [\"for\", \"telefone\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"telefone\", \"formControlName\", \"telefone\", 1, \"form-control\"], [\"for\", \"cep\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cep\", \"formControlName\", \"cep\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"routerLink\", \"/clientes\"], [\"type\", \"text\", 1, \"btn\", \"btn-danger\", \"ms-2\"]],\n  template: function ClientRegisterUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\");\n      i0.ɵɵtext(4);\n      i0.ɵɵpipe(5, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function ClientRegisterUpdateComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Logradouro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Renda Mensal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 5)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 14);\n      i0.ɵɵtext(27, \"Complemento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 5)(30, \"label\", 16);\n      i0.ɵɵtext(31, \"Telefone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 5)(34, \"label\", 18);\n      i0.ɵɵtext(35, \"CEP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 20);\n      i0.ɵɵtext(38);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"a\", 21)(40, \"button\", 22);\n      i0.ɵɵtext(41, \"Voltar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.clientCpf ? \"Atualizar Cadastro\" : \"Cadastrar\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 5, ctx.registerForm.value));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.clientCpf ? \"Atualizar\" : \"Cadastrar\");\n    }\n  },\n  dependencies: [i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","Swal","ClientRegisterUpdateComponent","constructor","clientsService","route","alertsService","cpf","required","nome","telefone","logradouro","complemento","cep","rendimentoMensal","ngOnInit","clientCpf","String","snapshot","paramMap","get","findClientByCpf","subscribe","client","registerForm","setValue","onSubmit","atualizar","cadastrar","value","registerClient","result","fire","icon","title","then","retornar","window","open","error","console","updateClient","confirmButtonText","text","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\emprestimo-front\\emprestimo-front\\src\\app\\pages\\client-register-update\\client-register-update.component.ts","C:\\emprestimo-front\\emprestimo-front\\src\\app\\pages\\client-register-update\\client-register-update.component.html"],"sourcesContent":["import { HttpHeaderResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { IClient } from 'src/app/interfaces/client';\nimport { AlertsService } from 'src/app/services/alerts.service';\nimport { ClientsService } from 'src/app/services/clients.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-client-register-update',\n  templateUrl: './client-register-update.component.html',\n  styleUrls: ['./client-register-update.component.css'],\n})\nexport class ClientRegisterUpdateComponent {\n  registerForm = new FormGroup({\n    cpf: new FormControl('', Validators.required),\n    nome: new FormControl('', Validators.required),\n    telefone: new FormControl(0, Validators.required),\n    logradouro: new FormControl('', Validators.required),\n    complemento: new FormControl('', Validators.required),\n    cep: new FormControl('', Validators.required),\n    rendimentoMensal: new FormControl(0, Validators.required),\n  });\n\n  constructor(\n    private clientsService: ClientsService,\n    private route: ActivatedRoute,\n    private alertsService: AlertsService\n  ) {}\n  clientCpf = '';\n\n  ngOnInit() {\n    this.clientCpf = String(this.route.snapshot.paramMap.get('cpf'));\n    if (this.clientCpf && this.clientCpf !== '') {\n      this.clientsService\n        .findClientByCpf(this.clientCpf)\n        .subscribe((client: IClient) => {\n          this.registerForm.setValue({\n            cpf: client.cpf,\n            nome: client.nome,\n            telefone: client.telefone,\n            logradouro: client.logradouro,\n            complemento: client.complemento,\n            cep: client.cep,\n            rendimentoMensal: client.rendimentoMensal,\n          });\n        });\n    }\n  }\n\n  onSubmit() {\n    if (this.clientCpf) {\n      this.atualizar();\n    } else {\n      this.cadastrar();\n    }\n  }\n\n  cadastrar() {\n    const client: IClient = this.registerForm.value as IClient;\n    this.clientsService.registerClient(client).subscribe(\n      (result) => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Cadastro realizado!'\n        }).then((retornar) => {window.open(\"http://localhost:4200/clientes\", \"_self\")});\n      },\n      (error) => {\n        console.error();\n      }\n    );\n  }\n\n  atualizar() {\n    const client: IClient = this.registerForm.value as IClient;\n    this.clientsService.updateClient(client, this.clientCpf).subscribe(\n      (result) => {\n        Swal.fire({\n          title: 'Cliente atualizado com sucesso',\n          icon: 'success',\n          confirmButtonText: 'Ok'\n        }).then((retornar) => {window.open(\"http://localhost:4200/clientes\", \"_self\")});\n      },\n      (error) => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Algo deu errado! Verifique o erro no console.',\n        });\n        console.error(error);\n      }\n    );\n  }\n\n}\n","<!--\n<h1 class=\"display-6\">{{ clientCpf ? 'Atualizar Cadastro' : 'Cadastrar'}}</h1>\n<div>{{registerForm.value | json}}</div>\n<div class=\"container-fluid\">\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"cadastrar()\" action=\"\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"mb-3\">\n          <label for=\"cpf\" class=\"form-label\">CPF</label>\n          <input type=\"text\" class=\"form-control\" id=\"cpf\" formControlName=\"cpf\" required/>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"logradouro\" class=\"form-label\">Logradouro</label>\n          <input type=\"text\" class=\"form-control\" id=\"logradouro\" formControlName=\"logradouro\"/>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"renda\" class=\"form-label\">Renda Mensal</label>\n          <input type=\"number\" class=\"form-control\" id=\"renda\" formControlName=\"rendimentoMensal\"/>\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"mb-3\">\n          <label for=\"nome\" class=\"form-label\">Nome</label>\n          <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\"/>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"Complemento\" class=\"form-label\">Complemento</label>\n          <input type=\"text\" class=\"form-control\" id=\"Complemento\" formControlName=\"complemento\"/>\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"mb-3\">\n          <label for=\"telefone\" class=\"form-label\">Telefone</label>\n          <input type=\"number\" class=\"form-control\" id=\"telefone\" formControlName=\"telefone\"/>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"cep\" class=\"form-label\">CEP</label>\n          <input type=\"text\" class=\"form-control\" id=\"cep\" formControlName=\"cep\"/>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\">{{clientCpf ? 'Atrualizar' : 'Cadastrar'}}</button>\n    <a routerLink=\"/clientes\"><button type=\"text\" class=\"btn btn-danger ms-2\">Voltar</button></a>\n  </form>\n</div>\n -->\n\n\n\n <div class=\"container\">\n  <h1 class=\"display-6\">{{ clientCpf ? 'Atualizar Cadastro' : 'Cadastrar'}}</h1>\n  <div>{{registerForm.value | json}}</div>\n  <div class=\"panel bg-whit shadow p-4 m-4\">\n    <div class=\"panel-body\">\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" action=\"\">\n            <div class=\"row mb-3\">\n              <label for=\"cpf\" class=\"form-label\">CPF</label>\n              <input type=\"text\" class=\"form-control\" id=\"cpf\" formControlName=\"cpf\" required/>\n            </div>\n            <div class=\"row mb-3\">\n              <label for=\"logradouro\" class=\"form-label\">Logradouro</label>\n              <input type=\"text\" class=\"form-control\" id=\"logradouro\" formControlName=\"logradouro\"/>\n            </div>\n            <div class=\"row mb-3\">\n              <label for=\"renda\" class=\"form-label\">Renda Mensal</label>\n              <input type=\"number\" class=\"form-control\" id=\"renda\" formControlName=\"rendimentoMensal\"/>\n            </div>\n            <div class=\"row mb-3\">\n              <label for=\"nome\" class=\"form-label\">Nome</label>\n              <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\"/>\n            </div>\n            <div class=\"row mb-3\">\n              <label for=\"Complemento\" class=\"form-label\">Complemento</label>\n              <input type=\"text\" class=\"form-control\" id=\"Complemento\" formControlName=\"complemento\"/>\n            </div>\n            <div class=\"row mb-3\">\n              <label for=\"telefone\" class=\"form-label\">Telefone</label>\n              <input type=\"number\" class=\"form-control\" id=\"telefone\" formControlName=\"telefone\"/>\n            </div>\n            <div class=\"row mb-3\">\n              <label for=\"cep\" class=\"form-label\">CEP</label>\n              <input type=\"text\" class=\"form-control\" id=\"cep\" formControlName=\"cep\"/>\n            </div>\n        <button type=\"submit\" [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\">{{clientCpf ? 'Atualizar' : 'Cadastrar'}}</button>\n        <a routerLink=\"/clientes\"><button type=\"text\" class=\"btn btn-danger ms-2\">Voltar</button></a>\n      </form>\n    </div>\n  </div>\n </div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}